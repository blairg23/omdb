# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = py36, py37, lint, build, clean
skip_missing_interpreters = true

[testenv]
whitelist_externals = *
passenv = *
deps = -rrequirements-test.txt
commands = {[testenv:unit]commands}

[travis]
python =
    3.6: py36
    3.7: py37, lint, build

; Trying this from https://github.com/Knewton/python-project-template-with-pip-compile/blob/master/tox.ini
[testenv:pip-compile]
; Run this to `pip-compile` your `requirements*.in` files into `requirements.txt`. Note that
; this will use your default version of python when doing dependency resolution, even though there
; are four other environments in `envlist` above.
deps=
    # Note that we require `pip-tools` here, *not* in a `requirements.*` file.
    pip-tools

commands=
    pip-compile requirements-test.in -o requirements-test.txt
    pip-compile requirements.in -o requirements.txt

[testenv:unit]
deps = {[testenv]deps}
commands = pytest {posargs:--cov={envsitepackagesdir}/omdb {envsitepackagesdir}/omdb src/tests}

[testenv:black]
deps = black
commands = black src/omdb src/tests

[testenv:flake8]
deps = flake8
commands = flake8 src/omdb src/tests

[testenv:pylint]
deps = pylint
commands = pylint -E -d not-callable,no-self-argument,no-member,no-value-for-parameter,method-hidden src/omdb

[testenv:lint]
deps =
    {[testenv:black]deps}
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
commands =
    {[testenv:black]commands}
    {[testenv:flake8]commands}
    {[testenv:pylint]commands}

[testenv:test]
deps =
    {[testenv]deps}
    {[testenv:build]deps}
commands =
    {[testenv:unit]commands}
    {[testenv:build]commands}

[testenv:build]
skip_install = true
deps =
    wheel
commands =
    rm -rf dist build
    python -W ignore setup.py -q sdist bdist_wheel

[testenv:release]
deps =
    {[testenv:build]deps}
    twine
commands =
    {[testenv:build]commands}
    twine upload dist/*

# From https://pytest-cov.readthedocs.io/en/latest/tox.html
[testenv:clean]
deps = coverage
skip_install = true
commands =
    coverage erase
    bash -c "find . | grep -E '(__pycache__)|\.pyc|\.pyo|\.pyd$' | xargs rm -rf"
    rm -rf .tox .coverage .cache .egg* *.egg* dist build

[pytest]
addopts =
    -v -s
    --color=yes
    --cov
    --cov-append
    --cov-report=term-missing
    --cov-config=tox.ini

[coverage:run]
omit =
    */tests/*
    */test_*
    */distutils/*
    */site-packages/*
    */.tox/*
    */usr/*

[coverage:report]
show_missing = True
omit =
    */usr/*
    */.tox/*

[black]
exclude =.tox,env

[flake8]
# F401 - `module` imported but unused
# F811 - redefinition of unused `name` from line `N`
# W504 - line break after binary operator
# ignore = E226,E302,E41,F401
ignore = F401,F811,W504
max-line-length = 1000
max-complexity = 10
exclude = .tox,env

[pylint]
exclude = .tox,env

[report]
omit =
    */usr/*
    */.tox/*